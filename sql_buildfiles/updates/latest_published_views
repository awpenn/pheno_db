    CREATE OR REPLACE VIEW cc_latest_published_version
        AS
        SELECT 
            subject_id, 
            _data::json->>'sex' as sex,
            _data::json->>'prevad' as prevad,
            _data::json->>'incad' as incad,
            _data::json->>'age' as age,
            _data::json->>'age_baseline' as age_baseline,
            _data::json->>'apoe' as apoe,
            _data::json->>'autopsy' as autopsy,
            _data::json->>'braak' as braak,
            _data::json->>'race' as race,
            _data::json->>'ethnicity' as ethnicity,
            _data::json->>'selection' as selection,
            _data::json->>'ad' as ad,
            _data::json->>'comments' as comments,
            CAST(_data::json->>'data_version' as INT) as data_version,
           _get_current_data.published as record_published,
            d1.release_version as release_version,
            d1.published as version_published,
            CAST(_data::json->>'update_baseline' as BOOLEAN) as update_baseline,
            CAST(_data::json->>'update_latest' as BOOLEAN) as update_latest,
            CAST(_data::json->>'update_adstatus' as BOOLEAN) as update_adstatus,
            CAST(_data::json->>'correction' as BOOLEAN) as correction

        FROM _get_current_data
        JOIN data_versions d1
            ON d1.id = CAST(_data::json->>'data_version' as INT)
        WHERE subject_type = 'case/control'
        AND _data->>'data_version' = ( SELECT DISTINCT MAX(_get_current_data._data->>'data_version') FROM _get_current_data WHERE subject_type = 'case/control')
        ORDER BY subject_id ASC, data_version DESC;

    CREATE OR REPLACE VIEW fam_latest_published_version
        AS
        SELECT 
            subject_id,
            _data::json->>'famid' as famid, 
            _data::json->>'mother' as mother, 
            _data::json->>'father' as father, 
            _data::json->>'sex' as sex,
            _data::json->>'age' as age,
            _data::json->>'age_baseline' as age_baseline,
            _data::json->>'apoe' as apoe,
            _data::json->>'autopsy' as autopsy,
            _data::json->>'braak' as braak,
            _data::json->>'race' as race,
            _data::json->>'ethnicity' as ethnicity,
            _data::json->>'ad' as ad,
            _data::json->>'famgrp' as famgrp,
            _data::json->>'comments' as comments,
            CAST(_data::json->>'data_version' as INT) as data_version,
            _get_current_data.published as record_published,
            d1.release_version as release_version,
            d1.published as version_published,
            CAST(_data::json->>'update_baseline' as BOOLEAN) as update_baseline,
            CAST(_data::json->>'update_latest' as BOOLEAN) as update_latest,
            CAST(_data::json->>'update_adstatus' as BOOLEAN) as update_adstatus,
            CAST(_data::json->>'correction' as BOOLEAN) as correction

        FROM _get_current_data
        JOIN data_versions d1
            ON d1.id = CAST(_data::json->>'data_version' as INT)
        WHERE subject_type = 'family'
        AND _data->>'data_version' = ( SELECT DISTINCT MAX(_get_current_data._data->>'data_version') FROM _get_current_data WHERE subject_type = 'family')
        ORDER BY subject_id ASC, data_version DESC;

    CREATE OR REPLACE VIEW ADNI_latest_published_version
        AS
        SELECT 
            subject_id,
            _data::json->>'sex' as sex,
            _data::json->>'prevad' as prevad,
            _data::json->>'incad' as incad,
            _data::json->>'age_current' as age_current,
            _data::json->>'age_baseline' as age_baseline,
            _data::JSON->>'age_mci_onset' as age_mci_onset,
            _data::JSON->>'age_ad_onset' as age_ad_onset,
            _data::json->>'apoe' as apoe,
            _data::json->>'autopsy' as autopsy,
            _data::json->>'braak' as braak,
            _data::json->>'race' as race,
            _data::json->>'ethnicity' as ethnicity,
            _data::json->>'ad_last_visit' as ad_last_visit,
            _data::json->>'mci_last_visit' as mci_last_visit,
            _data::json->>'comments' as comments,
            CAST(_data::json->>'data_version' as INT) as data_version,
            _get_current_data.published as record_published,
            d1.release_version as release_version,
            d1.published as version_published,
            CAST(_data::json->>'update_baseline' as BOOLEAN) as update_baseline,
            CAST(_data::json->>'update_latest' as BOOLEAN) as update_latest,
            CAST(_data::json->>'update_diagnosis' as BOOLEAN) as update_diagnosis,
            CAST(_data::json->>'correction' as BOOLEAN) as correction
            
        FROM _get_current_data
        JOIN data_versions d1
            ON d1.id = CAST(_data::json->>'data_version' as INT)
        WHERE subject_type = 'ADNI'
        AND _data->>'data_version' = ( SELECT DISTINCT MAX(_get_current_data._data->>'data_version') FROM _get_current_data WHERE subject_type = 'ADNI')
        ORDER BY subject_id ASC, data_version DESC;

    CREATE OR REPLACE VIEW psp_cdb_latest_published_version
        AS
        SELECT 
            subject_id,
            _data::json->>'sex' as sex,
            _data::json->>'diagnosis' as diagnosis,
            _data::json->>'ageonset' as age_onset,
            _data::json->>'agedeath' as age_death,
            _data::json->>'race' as race,
            _data::json->>'duplicate_subjid' as duplicate_subjid,
            _data::json->>'comments' as comments,
            CAST(_data::json->>'data_version' as INT) as data_version,
            _get_current_data.published as record_published,
            d1.release_version as release_version,
            d1.published as version_published,
            CAST(_data::json->>'update_baseline' as BOOLEAN) as update_baseline,
            CAST(_data::json->>'update_latest' as BOOLEAN) as update_latest,
            CAST(_data::json->>'update_diagnosis' as BOOLEAN) as update_diagnosis,
            CAST(_data::json->>'correction' as BOOLEAN) as correction

        FROM _get_current_data
        JOIN data_versions d1
            ON d1.id = CAST(_data::json->>'data_version' as INT)
        WHERE subject_type = 'PSP/CDB'
        AND _data->>'data_version' = ( SELECT DISTINCT MAX(_get_current_data._data->>'data_version') FROM _get_current_data WHERE subject_type = 'PSP/CDB')
        ORDER BY subject_id ASC, data_version DESC;